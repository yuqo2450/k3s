---
# tasks file for install
# code: language=ansible
- name: Set k3s prerequisites
  block:
    - name: Install required packages
      ansible.builtin.apt:
        name: ['open-iscsi', 'curl', 'nfs-common', 'util-linux']
        state: present
      when: ansible_distribution in ['Debian', 'Ubuntu']

    - name: Allow ipv4 forwarding
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present

    - name: Allow ipv6 forwarding
      ansible.posix.sysctl:
        name: net.ipv6.conf.all.forwarding
        value: 1
        state: present

    - name: Accept ipv6 router advertisment
      ansible.posix.sysctl:
        name: net.ipv6.conf.all.accept_ra
        value: 2
        state: present

    - name: Load kernel module br_netfilter
      community.general.modprobe:
        name: br_netfilter
        state: present

- name: Install k3s binary
  block:
    - name: Download binary
      ansible.builtin.get_url:
        url: "https://github.com/k3s-io/k3s/releases/download/{{ install_version }}+k3s1/k3s{{ (ansible_architecture not in ['x86_64', 'aarch64']) | ternary(ansible_architecture, (ansible_architecture == 'x86_64') | ternary('', 'aarch64')) }}" # noqa: yaml[line-length]
        dest: "{{ install_bin_path }}/k3s-{{ install_version }}"
        owner: root
        group: root
        mode: '0755'

    - name: Set link to k3s
      ansible.builtin.file:
        state: link
        src: "{{ install_bin_path }}/k3s-{{ install_version }}"
        dest: "{{ install_bin_path }}/k3s"
        owner: root
        group: root

- name: Ensure k3s config directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop: "{{ install_config_dirs }}"

- name: Configure k3s service
  ansible.builtin.template:
    dest: /lib/systemd/system/k3s.service
    src: k3s.service.j2
    owner: root
    group: root
    mode: '0644'

- name: Determine cluster k3s init server
  ansible.builtin.set_fact:
    k3s_install_init_server: "{{ ansible_host }}"
  run_once: true

- name: Ensure cluster is initialized
  ansible.builtin.wait_for:
    host: "{{ k3s_install_init_server }}"
    port: 6443
    state: started
    timeout: 5
  register: cluster_initialized
  failed_when:
    - cluster_initialized.failed
    - "'Timeout when waiting' not in cluster_initialized.msg"
  changed_when:
    - cluster_initialized.failed
    - "'Timeout when waiting' in cluster_initialized.msg"

- name: Initialize cluster on k3s init server
  run_once: true
  when: cluster_initialized.changed # noqa: no-handler
  delegate_to: "{{ (k3s_install_init_server in install_controller_ips) | ternary(k3s_install_init_server, ansible_host) }}"
  block:
    - name: Ensure init config
      ansible.builtin.template:
        dest: /etc/rancher/k3s/config.yaml.d/00_cluster_init.yaml
        src: config/00_cluster_init.yaml.j2
        owner: root
        group: root
        mode: '0644'

    - name: Configure kube-vip cluster loadbalancer
      ansible.builtin.template:
        dest: /var/lib/rancher/k3s/server/manifests/lb.yaml
        src: kubevip/lb.yaml.j2
        owner: root
        group: root
        mode: '0644'
      when: install_lb_iface is defined

    - name: Configure kube-vip service loadbalancer
      ansible.builtin.template:
        dest: /var/lib/rancher/k3s/server/manifests/svclb.yaml
        src: kubevip/svclb.yaml.j2
        owner: root
        group: root
        mode: '0644'
      when: install_svclb_ips is defined

    - name: Start k3s service on k3s init server
      ansible.builtin.service:
        name: k3s.service
        state: started
        enabled: true

    - name: Ensure cluster is initialized
      ansible.builtin.wait_for:
        host: "{{ k3s_install_init_server }}"
        port: 6443
        state: started
        timeout: 300

- name: Get token
  ansible.builtin.slurp:
    src: /var/lib/rancher/k3s/server/node-token
  run_once: true
  delegate_to: "{{ (k3s_install_init_server in install_controller_ips) | ternary(k3s_install_init_server, ansible_host) }}"
  register: node_token

- name: Set token
  ansible.builtin.set_fact:
    k3s_install_token: "{{ node_token.content | b64decode }}"

- name: Configure k3s
  ansible.builtin.template:
    dest: /etc/rancher/k3s/config.yaml.d/01_default.yaml
    src: config/01_default.yaml.j2
    owner: root
    group: root
    mode: '0644'

- name: Start k3s service
  ansible.builtin.service:
    name: k3s.service
    state: started
    enabled: true
  throttle: 1
